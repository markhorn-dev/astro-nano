---
import { type CollectionEntry, getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import ArrowCard from "@components/ArrowCard.astro";
import { BLOG } from "@consts";

const filters = [
  { id: "self-develop", label: "RozwÃ³j" },
  { id: "design-patterns", label: "Wzorce projektowe" },
  { id: "javascript", label: "JavaScript" },
  { id: "typescript", label: "TypeScript" },
];

const data = (await getCollection("blog"))
  .filter((post) => post.data.published != "false")
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

type Acc = {
  [year: string]: CollectionEntry<"blog">[];
};

const posts = data.reduce((acc: Acc, post) => {
  const year = post.data.date.getFullYear().toString();
  if (!acc[year]) {
    acc[year] = [];
  }
  acc[year].push(post);
  return acc;
}, {});

const years = Object.keys(posts).sort((a, b) => parseInt(b) - parseInt(a));
---

<PageLayout title={BLOG.TITLE} description={BLOG.DESCRIPTION}>
  <Container>
    <div class="space-y-10">
      <div class="animate font-semibold text-black dark:text-white">Blog</div>

      <div class="tag-filter">
        {
          filters.map((filter) => (
            <button class="filter-button" data-filter={filter.id}>
              {filter.label}
            </button>
          ))
        }
      </div>

      <div class="space-y-4">
        {
          years.map((year) => (
            <section class="year-section animate space-y-4">
              <div class="font-semibold text-black dark:text-white">{year}</div>
              <div>
                <ul class="flex flex-col gap-4">
                  {posts[year].map((post) => (
                    <li
                      data-tags={post.data.tags && post.data.tags.join(" ")}
                      class="post-item"
                    >
                      <ArrowCard entry={post} />
                    </li>
                  ))}
                </ul>
              </div>
            </section>
          ))
        }
      </div>
    </div>
  </Container>

  <script is:inline>
    document.addEventListener("DOMContentLoaded", () => {
      const filterButtons = document.querySelectorAll(".filter-button");
      const posts = document.querySelectorAll(".post-item");
      const yearSections = document.querySelectorAll(".year-section");

      filterButtons.forEach((button) => {
        button.addEventListener("click", () => {
          const filter = button.getAttribute("data-filter");
          const isActive = button.classList.contains("active");

          filterButtons.forEach((btn) => btn.classList.remove("active"));

          if (isActive) {
            posts.forEach((post) => (post.style.display = ""));
            yearSections.forEach((section) => (section.style.display = ""));
          } else {
            button.classList.add("active");

            posts.forEach((post) => {
              const tags = post.getAttribute("data-tags");
              post.style.display = tags && tags.includes(filter) ? "" : "none";
            });

            yearSections.forEach((section) => {
              const visiblePosts = Array.from(
                section.querySelectorAll(".post-item"),
              ).some((post) => post.style.display !== "none");
              section.style.display = visiblePosts ? "" : "none";
            });
          }
        });
      });
    });
  </script>
</PageLayout>
